@use '../helpers/mixins/breakpoints' as m;

// layout
.layout {
  display: grid;
  grid-template-columns: repeat(12, 1fr);

  @include m.mq('sm') {
    grid-template-columns: 1fr;
  }
}

.layout-main {
  grid-area: main;
}

.layout-aside {
  grid-area: aside;
}

.layout--spacious-80 {
  grid-template-areas: ' . . main main main main main main main main . .';
  @include m.mq('sm') {
    grid-template: 'main' 1fr / 1fr;
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'main' 1fr / 1fr;
    }
  }
}

.layout--spacious-60 {
  grid-template-areas: ' . . . main main main main main main . . .';
  @include m.mq('sm') {
    grid-template: 'main' 1fr / 1fr;
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'main' 1fr / 1fr;
    }
  }
}

.layout--spacious-40 {
  grid-template-areas: ' . . . . main main main main . . . .';
  @include m.mq('sm') {
    grid-template: 'main' 1fr / 1fr;
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'main' 1fr / 1fr;
    }
  }
}

// full

.layout--full {
  grid-template-areas: 'main main main main main main main main main main main main';
  @include m.mq('sm') {
    grid-template: 'main' 1fr / 1fr;
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'main' 1fr / 1fr;
    }
  }
}

.layout--full-50-40 {
  grid-template-areas: 'main main main main main . . . aside aside aside aside';
  @include m.mq('sm') {
    grid-template: 'main' 'aside' auto / 1fr;

    &.sm-reverse {
      grid-template: 'aside' 'main' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'main' 'aside' auto / 1fr;

      &-reverse {
        grid-template: 'aside' 'main' auto / 1fr;
      }
    }
  }
}

.layout--full-40-50 {
  grid-template-areas: 'aside aside aside aside . . . main main main main main';
  @include m.mq('sm') {
    grid-template: 'aside' 'main' auto / 1fr;

    &.sm-reverse {
      grid-template: 'main' 'aside' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'aside' 'main' auto / 1fr;

      &-reverse {
        grid-template: 'main' 'aside' auto / 1fr;
      }
    }
  }
}

.layout--full-50-50 {
  grid-template-areas: 'aside aside aside aside aside . . main main main main main';
  @include m.mq('sm') {
    grid-template: 'aside' 'main' auto / 1fr;

    &.sm-reverse {
      grid-template: 'main' 'aside' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'aside' 'main' auto / 1fr;

      &-reverse {
        grid-template: 'main' 'aside' auto / 1fr;
      }
    }
  }
}

.layout--full-60-40 {
  grid-template-areas: 'main main main main main main . . aside aside aside aside';
  @include m.mq('sm') {
    grid-template: 'main' 'aside' auto / 1fr;

    &.sm-reverse {
      grid-template: 'aside' 'main' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'main' 'aside' auto / 1fr;

      &-reverse {
        grid-template: 'aside' 'main' auto / 1fr;
      }
    }
  }
}

.layout--full-40-60 {
  grid-template-areas: 'aside aside aside aside . . main main main main main main';
  @include m.mq('sm') {
    grid-template: 'aside' 'main' auto / 1fr;

    &.sm-reverse {
      grid-template: 'main' 'aside' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'aside' 'main' auto / 1fr;

      &-reverse {
        grid-template: 'main' 'aside' auto / 1fr;
      }
    }
  }
}

.layout--full-60-60 {
  grid-template-areas: 'aside aside aside aside aside aside main main main main main main';
  @include m.mq('sm') {
    grid-template: 'aside' 'main' auto / 1fr;

    &.sm-reverse {
      grid-template: 'main' 'aside' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'aside' 'main' auto / 1fr;

      &-reverse {
        grid-template: 'main' 'aside' auto / 1fr;
      }
    }
  }
}

.layout--full-70-40 {
  grid-template-areas: 'main main main main main main main . aside aside aside aside';
  @include m.mq('sm') {
    grid-template: 'main' 'aside' auto / 1fr;

    &.sm-reverse {
      grid-template: 'aside' 'main' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'main' 'aside' auto / 1fr;

      &-reverse {
        grid-template: 'aside' 'main' auto / 1fr;
      }
    }
  }
}

.layout--full-40-70 {
  grid-template-areas: 'aside aside aside aside . main main main main main main main';
  @include m.mq('sm') {
    grid-template: 'aside' 'main' auto / 1fr;

    &.sm-reverse {
      grid-template: 'main' 'aside' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'aside' 'main' auto / 1fr;

      &-reverse {
        grid-template: 'main' 'aside' auto / 1fr;
      }
    }
  }
}

.layout--full-70-30 {
  grid-template-areas: 'main main main main main main main . . aside aside aside';
  @include m.mq('sm') {
    grid-template: 'main' 'aside' auto / 1fr;

    &.sm-reverse {
      grid-template: 'aside' 'main' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'main' 'aside' auto / 1fr;

      &-reverse {
        grid-template: 'aside' 'main' auto / 1fr;
      }
    }
  }
}

.layout--full-30-70 {
  grid-template-areas: 'aside aside aside . . main main main main main main main';
  @include m.mq('sm') {
    grid-template: 'aside' 'main' auto / 1fr;

    &.sm-reverse {
      grid-template: 'main' 'aside' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'aside' 'main' auto / 1fr;

      &-reverse {
        grid-template: 'main' 'aside' auto / 1fr;
      }
    }
  }
}

.layout--full-70-50 {
  grid-template-areas: 'main main main main main main main aside aside aside aside aside';
  @include m.mq('sm') {
    grid-template: 'main' 'aside' auto / 1fr;

    &.sm-reverse {
      grid-template: 'aside' 'main' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'main' 'aside' auto / 1fr;

      &-reverse {
        grid-template: 'aside' 'main' auto / 1fr;
      }
    }
  }
}

.layout--full-50-70 {
  grid-template-areas: 'aside aside aside aside aside main main main main main main main';
  @include m.mq('sm') {
    grid-template: 'aside' 'main' auto / 1fr;

    &.sm-reverse {
      grid-template: 'main' 'aside' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'aside' 'main' auto / 1fr;

      &-reverse {
        grid-template: 'main' 'aside' auto / 1fr;
      }
    }
  }
}

.layout--full-40-80 {
  grid-template-areas: 'aside aside aside aside main main main main main main main main';
  @include m.mq('sm') {
    grid-template: 'aside' 'main' auto / 1fr;

    &.sm-reverse {
      grid-template: 'main' 'aside' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'aside' 'main' auto / 1fr;

      &-reverse {
        grid-template: 'main' 'aside' auto / 1fr;
      }
    }
  }
}

.layout--full-80-40 {
  grid-template-areas: 'main main main main main main main main aside aside aside aside';
  @include m.mq('sm') {
    grid-template: 'main' 'aside' auto / 1fr;

    &.sm-reverse {
      grid-template: 'aside' 'main' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'main' 'aside' auto / 1fr;

      &-reverse {
        grid-template: 'aside' 'main' auto / 1fr;
      }
    }
  }
}

.layout--full-30-80 {
  grid-template-areas: 'aside aside aside . main main main main main main main main';
  @include m.mq('sm') {
    grid-template: 'aside' 'main' auto / 1fr;

    &.sm-reverse {
      grid-template: 'main' 'aside' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'aside' 'main' auto / 1fr;

      &-reverse {
        grid-template: 'main' 'aside' auto / 1fr;
      }
    }
  }
}

.layout--full-80-30 {
  grid-template-areas: 'main main main main main main main main . aside aside aside';
  @include m.mq('sm') {
    grid-template: 'main' 'aside' auto / 1fr;

    &.sm-reverse {
      grid-template: 'aside' 'main' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'main' 'aside' auto / 1fr;

      &-reverse {
        grid-template: 'aside' 'main' auto / 1fr;
      }
    }
  }
}

.layout--full-20-80 {
  grid-template-areas: 'aside aside . . main main main main main main main main';
  @include m.mq('sm') {
    grid-template: 'aside' 'main' auto / 1fr;

    &.sm-reverse {
      grid-template: 'main' 'aside' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'aside' 'main' auto / 1fr;

      &-reverse {
        grid-template: 'main' 'aside' auto / 1fr;
      }
    }
  }
}

.layout--full-80-20 {
  grid-template-areas: 'main main main main main main main main . . aside aside';
  @include m.mq('sm') {
    grid-template: 'main' 'aside' auto / 1fr;

    &.sm-reverse {
      grid-template: 'aside' 'main' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'main' 'aside' auto / 1fr;

      &-reverse {
        grid-template: 'aside' 'main' auto / 1fr;
      }
    }
  }
}

// Spacious
.layout--spacious {
  grid-template-areas: '. main main main main main main main main main main .';
  @include m.mq('sm') {
    grid-template: 'main' 1fr / 1fr;
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'main' 1fr / 1fr;
    }
  }
}

.layout--spacious-50-40 {
  grid-template-areas: '. main main main main main . aside aside aside aside .';
  @include m.mq('sm') {
    grid-template: 'main' 'aside' auto / 1fr;

    &.sm-reverse {
      grid-template: 'aside' 'main' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'main' 'aside' auto / 1fr;

      &-reverse {
        grid-template: 'aside' 'main' auto / 1fr;
      }
    }
  }
}

.layout--spacious-40-50 {
  grid-template-areas: '. aside aside aside aside . main main main main main . ';
  @include m.mq('sm') {
    grid-template: 'aside' 'main' auto / 1fr;

    &.sm-reverse {
      grid-template: 'main' 'aside' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'aside' 'main' auto / 1fr;

      &-reverse {
        grid-template: 'main' 'aside' auto / 1fr;
      }
    }
  }
}

.layout--spacious-50-50 {
  grid-template-areas: '. aside aside aside aside aside main main main main main . ';
  @include m.mq('sm') {
    grid-template: 'aside' 'main' auto / 1fr;

    &.sm-reverse {
      grid-template: 'main' 'aside' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'aside' 'main' auto / 1fr;

      &-reverse {
        grid-template: 'main' 'aside' auto / 1fr;
      }
    }
  }
}

.layout--spacious-60-40 {
  grid-template-areas: '. main main main main main main aside aside aside aside .';
  @include m.mq('sm') {
    grid-template: 'main' 'aside' auto / 1fr;

    &.sm-reverse {
      grid-template: 'aside' 'main' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'main' 'aside' auto / 1fr;

      &-reverse {
        grid-template: 'aside' 'main' auto / 1fr;
      }
    }
  }
}

.layout--spacious-40-60 {
  grid-template-areas: '. aside aside aside aside main main main main main main .';
  @include m.mq('sm') {
    grid-template: 'aside' 'main' auto / 1fr;

    &.sm-reverse {
      grid-template: 'main' 'aside' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'aside' 'main' auto / 1fr;

      &-reverse {
        grid-template: 'main' 'aside' auto / 1fr;
      }
    }
  }
}

.layout--spacious-70-20 {
  grid-template-areas: '. main main main main main main main . aside aside .';
  @include m.mq('sm') {
    grid-template: 'main' 'aside' auto / 1fr;

    &.sm-reverse {
      grid-template: 'aside' 'main' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'main' 'aside' auto / 1fr;

      &-reverse {
        grid-template: 'aside' 'main' auto / 1fr;
      }
    }
  }
}

.layout--spacious-20-70 {
  grid-template-areas: '. aside aside . main main main main main main main .';
  @include m.mq('sm') {
    grid-template: 'aside' 'main' auto / 1fr;

    &.sm-reverse {
      grid-template: 'main' 'aside' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'aside' 'main' auto / 1fr;

      &-reverse {
        grid-template: 'main' 'aside' auto / 1fr;
      }
    }
  }
}

.layout--spacious-70-30 {
  grid-template-areas: '. main main main main main main main aside aside aside .';
  @include m.mq('sm') {
    grid-template: 'main' 'aside' auto / 1fr;

    &.sm-reverse {
      grid-template: 'aside' 'main' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'main' 'aside' auto / 1fr;

      &-reverse {
        grid-template: 'aside' 'main' auto / 1fr;
      }
    }
  }
}

.layout--spacious-30-70 {
  grid-template-areas: '. aside aside aside main main main main main main main .';
  @include m.mq('sm') {
    grid-template: 'aside' 'main' auto / 1fr;

    &.sm-reverse {
      grid-template: 'main' 'aside' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'aside' 'main' auto / 1fr;

      &-reverse {
        grid-template: 'main' 'aside' auto / 1fr;
      }
    }
  }
}

.layout--spacious-80-20 {
  grid-template-areas: '. main main main main main main main main aside aside .';
  @include m.mq('sm') {
    grid-template: 'main' 'aside' auto / 1fr;

    &.sm-reverse {
      grid-template: 'aside' 'main' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'main' 'aside' auto / 1fr;

      &-reverse {
        grid-template: 'aside' 'main' auto / 1fr;
      }
    }
  }
}

.layout--spacious-20-80 {
  grid-template-areas: '. aside aside main main main main main main main main .';
  @include m.mq('sm') {
    grid-template: 'aside' 'main' auto / 1fr;

    &.sm-reverse {
      grid-template: 'main' 'aside' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'aside' 'main' auto / 1fr;

      &-reverse {
        grid-template: 'main' 'aside' auto / 1fr;
      }
    }
  }
}

.layout--spacious-80-10 {
  grid-template-areas: '. main main main main main main main main . aside .';
  @include m.mq('sm') {
    grid-template: 'main' 'aside' auto / 1fr;

    &.sm-reverse {
      grid-template: 'aside' 'main' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'main' 'aside' auto / 1fr;

      &-reverse {
        grid-template: 'aside' 'main' auto / 1fr;
      }
    }
  }
}

.layout--spacious-10-80 {
  grid-template-areas: '. aside . main main main main main main main main .';
  @include m.mq('sm') {
    grid-template: 'aside' 'main' auto / 1fr;

    &.sm-reverse {
      grid-template: 'main' 'aside' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'aside' 'main' auto / 1fr;

      &-reverse {
        grid-template: 'main' 'aside' auto / 1fr;
      }
    }
  }
}

.layout-autofit {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
}

.layout-autofill {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
}

.layout-2-col {
  grid-template: 'main aside' 1fr / 6fr 6fr;

  @include m.mq('sm') {
    grid-template: 'main' 'aside' auto / 1fr;

    &.sm-reverse {
      grid-template: 'aside' 'main' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'main' 'aside' auto / 1fr;

      &-reverse {
        grid-template: 'aside' 'main' auto / 1fr;
      }
    }
  }
}

// Fixed 2 col side bar
.layout-2-col--fixed-aside-left {
  grid-template: 'aside main' 1fr / minmax(0px, max-content) 1fr;

  @include m.mq('sm') {
    grid-template: 'aside' 'main' auto / 1fr;

    &.sm-reverse {
      grid-template: 'main' 'aside' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'aside' 'main' auto / 1fr;

      &-reverse {
        grid-template: 'main' 'aside' auto / 1fr;
      }
    }
  }
}

.layout-2-col--fixed-aside-right {
  grid-template: 'main aside' 1fr/ 1fr minmax(0px, max-content);
  @include m.mq('sm') {
    grid-template: 'main' 'aside' auto / 1fr;

    &.sm-reverse {
      grid-template: 'aside' 'main' auto / 1fr;
    }
  }

  @include m.mq('md') {
    &.md-break {
      grid-template: 'main' 'aside' auto / 1fr;

      &-reverse {
        grid-template: 'aside' 'main' auto / 1fr;
      }
    }
  }
}

.layout-3-col {
  grid-template-columns: repeat(3, 4fr);

  @include m.mq('md') {
    grid-template-columns: repeat(2, 6fr);
  }

  @include m.mq('sm') {
    display: flex;
    flex-direction: column;
  }
}

.layout-4-col {
  grid-template-columns: repeat(4, 3fr);

  @include m.mq('md') {
    grid-template-columns: repeat(2, 6fr);
  }

  @include m.mq('sm') {
    display: flex;
    flex-direction: column;
  }
}
