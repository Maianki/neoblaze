@use "../helpers/mixins/breakpoints" as m;
//

$sizes: (
	"0": 0px,
	"px": 1px,
	"0\\.125": 0.125rem,
	"0\\.25": 0.25rem,
	"0\\.5": 0.5rem,
	"1": 1rem,
	"2": 2rem,
	"3": 3rem,
	"4": 4rem,
	"5": 5rem,
	"6": 6rem,
	"8": 8rem,
	"10": 10rem,
	"12": 12rem,
	"16": 16rem,
	"20": 20rem,
	"24": 24rem,
	"30": 30rem,
	"32": 32rem,
	"40": 40rem,
	"48": 48rem,
	"56": 56rem,
	"64": 64rem,
);

// width
@each $breakpoint, $screen-size in m.$breakpoints {
	@include m.mq($breakpoint) {
		@if $breakpoint != "" {
			$breakpoint: "-" + $breakpoint;
		}

		@each $token, $size in $sizes {
			.width#{$breakpoint}-#{$token} {
				width: $size;
			}
		}

		.width#{$breakpoint}-auto {
			width: auto;
		}

		.width#{$breakpoint}-full {
			width: 100%;
		}

		.width#{$breakpoint}-screen {
			width: 100vw;
		}

		.width#{$breakpoint}-min {
			width: min-content;
		}

		.width#{$breakpoint}-max {
			width: max-content;
		}

		.width#{$breakpoint}-fit {
			width: fit-content;
		}

		.width#{$breakpoint}-unset {
			width: unset;
		}

		// min width

		@each $token, $size in $sizes {
			.min#{$breakpoint}-width-#{$token} {
				min-width: $size;
			}
		}

		.min#{$breakpoint}-width-screen {
			min-width: 100vw;
		}

		.min#{$breakpoint}-width-full {
			min-width: 100%;
		}

		.min#{$breakpoint}-width-min {
			min-width: min-content;
		}

		.min#{$breakpoint}-width-max {
			min-width: max-content;
		}

		.min#{$breakpoint}-width-fit {
			min-width: fit-content;
		}

		.min#{$breakpoint}-width-unset {
			min-width: unset;
		}

		// max width

		@each $token, $size in $sizes {
			.max#{$breakpoint}-width-#{$token} {
				max-width: $size;
			}
		}
		.max#{$breakpoint}-width-none {
			max-width: none;
		}

		.max#{$breakpoint}-width-screen {
			max-width: 100vw;
		}

		.max#{$breakpoint}-width-full {
			max-width: 100%;
		}

		.max#{$breakpoint}-width-min {
			max-width: min-content;
		}

		.max#{$breakpoint}-width-max {
			max-width: max-content;
		}

		.max#{$breakpoint}-width-fit {
			max-width: fit-content;
		}
	}
}

// height
@each $breakpoint, $screen-size in m.$breakpoints {
	@include m.mq($breakpoint) {
		@if $breakpoint != "" {
			$breakpoint: "-" + $breakpoint;
		}

		@each $token, $size in $sizes {
			.height#{$breakpoint}-#{$token} {
				height: $size;
			}
		}

		.height#{$breakpoint}-0 {
			height: 0px;
		}

		.height#{$breakpoint}-auto {
			height: auto;
		}

		.height#{$breakpoint}-full {
			height: 100%;
		}

		.height#{$breakpoint}-screen {
			height: 100vh;
		}

		.height#{$breakpoint}-min {
			height: min-content;
		}

		.height#{$breakpoint}-max {
			height: max-content;
		}

		.height#{$breakpoint}-fit {
			height: fit-content;
		}

		.height#{$breakpoint}-unset {
			height: unset;
		}

		// min height
		@each $token, $size in $sizes {
			.min#{$breakpoint}-height-#{$token} {
				min-height: $size;
			}
		}

		.min#{$breakpoint}-height-screen {
			min-height: 100vw;
		}

		.min#{$breakpoint}-height-full {
			min-height: 100%;
		}

		.min#{$breakpoint}-height-min {
			min-height: min-content;
		}

		.min#{$breakpoint}-height-max {
			min-height: max-content;
		}

		.min#{$breakpoint}-height-fit {
			min-height: fit-content;
		}

		.min#{$breakpoint}-height-unset {
			min-height: unset;
		}

		// max height
		@each $token, $size in $sizes {
			.max#{$breakpoint}-height-#{$token} {
				max-height: $size;
			}
		}
		.max#{$breakpoint}-height-none {
			max-height: none;
		}

		.max#{$breakpoint}-height-screen {
			max-height: 100vw;
		}

		.max#{$breakpoint}-height-full {
			max-height: 100%;
		}

		.max#{$breakpoint}-height-min {
			max-height: min-content;
		}

		.max#{$breakpoint}-height-max {
			max-height: max-content;
		}

		.max#{$breakpoint}-height-fit {
			max-height: fit-content;
		}
	}
}
